spring:
  application:
    name: crypto-insight
  aop:
    auto: true
    proxy-target-class: true
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=2m
  ai:
    ollama:
      base-url: http://localhost:11434
      model: tinyllama:1.1b
      chat:
        options:
          temperature: 0.7
          top-p: 0.9
          top-k: 40
          num-predict: 800
          stop: ["</s>", "Human:", "Assistant:"]

server:
  port: 8081
  ssl:
    enabled: false
    # key-store: classpath:keystore.p12
    # key-store-password: ${SSL_KEYSTORE_PASSWORD}
    # key-store-type: PKCS12
    # key-alias: crypto-insight

logging:
  file:
    name: application.log
  level:
    root: INFO
    crypto.insight.crypto: DEBUG
    org.springframework.web: DEBUG
    org.springframework.web.reactive: DEBUG

# This section is what your AIService is actually reading from
#ai:
#  gemini:
#    project-id: ${GEMINI_PROJECT_ID}
#    location: ${GEMINI_LOCATION}
#    model-name: ${GEMINI_MODEL}
#    api-key: ${GEMINI_API_KEY}

crypto:
  api:
    cryptocompare:
      key: 682a577a63781a9dc6fc13cad64b4adcfe37e8b60d624de1e6a5fcd2423e94d6
      base-url: https://min-api.cryptocompare.com/data
    coingecko:
      base-url: https://api.coingecko.com/api/v3
    coinmarketcap:
      key: 5f305840-c7eb-472e-be56-45550b842897
      base-url: https://pro-api.coinmarketcap.com/v1
    mobula:
      key: your_mobula_key_here
      base-url: https://api.mobula.io/api/1

management:
  endpoints:
    web:
      exposure:
        include: "*"

# Security configuration
security:
  # Add security configurations here