spring.application.name=crypto-insight
server.port=8081

# CORS Configuration
security.cors.allowed-origins=http://localhost:3000,http://localhost:57094,http://localhost:64115,http://localhost:8080,http://localhost:9101,http://127.0.0.1:9101,http://localhost:*
security.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD
security.cors.allowed-headers=*
security.cors.allow-credentials=true
security.cors.max-age=3600

# Spring Boot CORS Configuration
spring.mvc.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:3000,*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

# API Configuration for Professional Crypto Data
crypto.api.cryptocompare.key=${CRYPTOCOMPARE_API_KEY:}
crypto.api.cryptocompare.baseUrl=https://min-api.cryptocompare.com/data
crypto.api.coingecko.baseUrl=https://api.coingecko.com/api/v3
crypto.api.coinmarketcap.key=5f305840-c7eb-472e-be56-45550b842897
crypto.api.coinmarketcap.baseUrl=https://pro-api.coinmarketcap.com

# API Rate Limiting
crypto.api.retry.maxAttempts=3
crypto.api.retry.delayMs=1000

# API Provider Configuration
api.cryptocompare.key=${CRYPTOCOMPARE_API_KEY:}
api.cryptocompare.baseUrl=https://min-api.cryptocompare.com/data
api.coingecko.baseUrl=https://api.coingecko.com/api/v3
api.coinpaprika.baseUrl=https://api.coinpaprika.com
api.mobula.key=${MOBULA_API_KEY:}
api.mobula.baseUrl=https://api.mobula.io

# Logging Configuration
logging.level.crypto.insight.crypto=INFO
logging.level.org.springframework.web.reactive=DEBUG

# Cache Configuration with EXTREME Performance
spring.cache.type=caffeine
spring.cache.cache-names=crypto-data,market-chart,crypto-analysis,real-time-prices,chart-data,ultra-fast-cache,predictive-cache
spring.cache.caffeine.spec=maximumSize=2000,expireAfterWrite=10s,expireAfterAccess=90s,recordStats,refreshAfterWrite=5s

# EXTREME Real-time Data Configuration
crypto.realtime.refresh.enabled=true
crypto.realtime.refresh.interval=15000
crypto.realtime.cache.ttl.prices=10
crypto.realtime.cache.ttl.charts=60
crypto.realtime.cache.ttl.analysis=300
crypto.realtime.predictive.enabled=true
crypto.realtime.batch.size=50

# Ultra-Fast Connection Pool
spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.connection-timeout=3000
spring.datasource.hikari.idle-timeout=180000
spring.datasource.hikari.max-lifetime=300000
spring.datasource.hikari.leak-detection-threshold=5000

# Extreme Threading Configuration
spring.task.scheduling.pool.size=20
spring.task.execution.pool.core-size=30
spring.task.execution.pool.max-size=100
spring.task.execution.pool.queue-capacity=2000
spring.task.execution.thread-name-prefix=ultra-fast-

# EXTREME AI Configuration for Maximum Speed
ai.ollama.baseUrl=http://localhost:11434
ai.model.name=tinyllama:1.1b
ai.model.timeout=3000
ai.model.maxTokens=150
ai.model.temperature=0.2
ai.model.stream=false
ai.model.cache.enabled=true
ai.model.cache.ttl=300
ai.model.parallel.enabled=true
ai.model.parallel.maxConcurrent=10

# Ultra-Fast HTTP Client Settings
spring.webclient.connect-timeout=1500
spring.webclient.read-timeout=5000
spring.webclient.write-timeout=3000
spring.webclient.pool.max-connections=1000
spring.webclient.pool.max-connections-per-route=200
spring.webclient.compression=true

# Performance Monitoring (disabled for max speed)
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.metrics.enabled=true
management.metrics.export.simple.enabled=false
management.metrics.web.server.auto-time-requests=false
